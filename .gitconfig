[core]
	pager = diff-so-fancy | less --tabs=4 -RFX
	editor = vim
	excludesfile = /Users/rghose/.gitignore
[color]
	ui = true
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = yellow
	frag = magenta bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
[commit]
  template = ~/.git-commit-message-template

[alias]
   # only add non whitespace changes
   anw = ! git diff -U0 -w --no-color | git apply --cached --ignore-whitespace --unidiff-zero - && git checkout .
   addu = add -u
   rbi = ! git stash push && git rebase -i --autosquash HEAD~5 && git stash pop
   pr = ! git fetch origin master:master && git pull --rebase origin master
   s = status
   b = branch  --sort=-committerdate 
   bl = "!f() { git for-each-ref --sort=-committerdate refs/heads/ --format='%(refname:short): %(authorname) - %(contents:subject)' | ggrep --color=always -z `git symbolic-ref --short HEAD`  ; }; f"
   cherry = cherry-pick
   cherrypick = cherry-pick
   ch = checkout
   # undo ca https://stackoverflow.com/questions/1459150/how-to-undo-git-commit-amend-done-instead-of-git-commit/1459264
   uca = ! git reset --soft HEAD@{1} && git commit -C HEAD@{1} && git commit --amend  --date "$(date)" --author="$(git config --global user.name)<$(git config --global user.email)>"
   ca = commit -a --amend -C HEAD
   co = commit
   com = commit -m
   fixlast = ! sh git-fixlast.sh
   t = tag
   git = !exec git
   fru = !git review update -p --update-desc
   frc = ! git review create  -o -ag -g adserving-reviewers,amdata-reviewers --no-prompt --bugs `git rev-parse --abbrev-ref HEAD` -p -t 'mint build runs'
   r = review
   # git show -s --format=%B HEAD | head -n 1 | grep -E -o 'ADS-[0-9-]+'
   # update the bugs field automatically /w current branch name since i use ADS-11111 branch naming convention
   rc = "!f() { ligradle format spotlessApply; (mint format || mint format-last || ligradle format || true) && git add -u && git ca && git review create  -o -ag -g adserving-reviewers,amdata-reviewers --no-prompt --bugs `git rev-parse --abbrev-ref HEAD` -p -t 'mint build runs' ; }; f"
   ru = !git removeWhitespace && mint precommit && git addu && git ca && git review update -p --update-desc
   rup = review update --parent
   rcp = review create --parent
   sad = "!f() { git review dcommit $1 && git submit --async; }; f"
   sa = submit --async
   uc = !$HOME/src/update-commit.sh
   np = !exec git --no-pager
   # from https://coderwall.com/p/_ppnlg/remove-whitespace-from-staged-files-in-git
   removeWhitespace = "!LAST_COMMIT_SHA=$(git rev-parse HEAD); git rebase HEAD~ --whitespace=fix && git reset --soft HEAD~ && git commit -C $LAST_COMMIT_SHA" 
[rebase]
	autosquash = true
[user]
	email = ronnie@ronnie.com
	name = Ronnie Ghose	
[filesystem "Oracle Corporation|1.8.0_172|/dev/disk1s1"]
	timestampResolution = 1001 milliseconds
	minRacyThreshold = 0 nanoseconds
[filesystem "Oracle Corporation|1.8.0_121|/dev/disk1s1"]
	timestampResolution = 1001 milliseconds
	minRacyThreshold = 0 nanoseconds
